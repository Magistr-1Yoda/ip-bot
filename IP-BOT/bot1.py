import telebot
import random
from telebot import *

bot = telebot.TeleBot("")

list_anegtot = ["–í—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å –∫–∞–∫-—Ç–æ —Ä–∞–∑ –º–∏–º–æ–∑–∞, —Ç—é–ª—å–ø–∞–Ω –∏ —Ä–æ–∑–∞. –ò –Ω–∞—á–∞–ª—Å—è —É –Ω–∏—Ö —Å–ø–æ—Ä, –∫—Ç–æ –∏–∑ –Ω–∏—Ö —Å–∞–º—ã–π –∫—Ä–∞—Å–∏–≤—ã–π.", 
                "–°–æ–±—Ä–∞–ª–∏—Å—å –æ–¥–Ω–∞–∂–¥—ã –º–∞—Ä—Å–∏–∞–Ω–∏–Ω, –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–Ω –∏ —á–µ–ª–æ–≤–µ–∫. –ò –ø–æ—Å–ø–æ—Ä–∏–ª–∏, —á—å—è –ø–ª–∞–Ω–µ—Ç–∞ –ª—É—á—à–µ.",
                "–ü–æ—à–ª–∏ –∫–∞–∫-—Ç–æ –≤ –ª–µ—Å –º–µ–¥–≤–µ–¥—å, –∑–∞—è—Ü –∏ –ª–∏—Å–∞. –ò —Ä–µ—à–∏–ª–∏ –æ–Ω–∏ –≤—ã—è—Å–Ω–∏—Ç—å, –∫—Ç–æ –∏–∑ –Ω–∏—Ö –±—ã—Å—Ç—Ä–µ–µ.",
                "–°–æ–±—Ä–∞–ª–∏—Å—å –Ω–∞ –±–µ—Ä–µ–≥—É —Ä–µ–∫–∏ —Å–ª–æ–Ω, –±–µ–≥–µ–º–æ—Ç –∏ –∫—Ä–æ–∫–æ–¥–∏–ª. –ò –Ω–∞—á–∞–ª–∏ –æ–Ω–∏ —Å–ø–æ—Ä–∏—Ç—å, –∫—Ç–æ –∏–∑ –Ω–∏—Ö —Å–∏–ª—å–Ω–µ–µ.",
                "–†–µ—à–∏–ª–∏ –∫–∞–∫-—Ç–æ –º—ã—à—å, –∫–æ—Ç –∏ —Å–æ–±–∞–∫–∞ —É—Å—Ç—Ä–æ–∏—Ç—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ, –∫—Ç–æ –∏–∑ –Ω–∏—Ö –ª—É—á—à–µ –ª–æ–≤–∏—Ç –ø—Ç–∏—Ü.",
                "–ü–æ—Å–ø–æ—Ä–∏–ª–∏ –∫–∞–∫-—Ç–æ –∫–æ–º–ø—å—é—Ç–µ—Ä, –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω, –∫—Ç–æ –∏–∑ –Ω–∏—Ö —É–º–Ω–µ–µ.",
                "–°–æ–±—Ä–∞–ª–∏—Å—å –≤ –ø—É—Å—Ç—ã–Ω–µ –≤–µ—Ä–±–ª—é–¥, —Å–∫–æ—Ä–ø–∏–æ–Ω –∏ –≤–∞—Ä–∞–Ω. –ò —Å—Ç–∞–ª–∏ –æ–Ω–∏ –æ–±—Å—É–∂–¥–∞—Ç—å, –∫—Ç–æ –∏–∑ –∏—Ö –±–æ–ª–µ–µ –≤—ã–Ω–æ—Å–ª–∏–≤—ã–π.",
                "–ü–æ—Å–ø–æ—Ä–∏–ª–∏ –æ–¥–Ω–∞–∂–¥—ã —è–π—Ü–æ, —Ü—ã–ø–ª–µ–Ω–æ–∫ –∏ –∫—É—Ä–∏—Ü–∞, –∫—Ç–æ –∏–∑ –Ω–∏—Ö –≥–ª–∞–≤–Ω–µ–µ.",
                "–°–æ–±—Ä–∞–ª–∏—Å—å –≤–º–µ—Å—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∏ —Å–∞–º–æ–∫–∞—Ç. –ò –∑–∞—Ç–µ—è–ª–∏ –æ–Ω–∏ —Å–ø–æ—Ä, –∫—Ç–æ –∏–∑ –Ω–∏—Ö –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π."]

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    btn1 =  types.InlineKeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ', callback_data = "Info")
    markup.add(btn1, )
    bot.send_message(message.chat.id, '–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç, —ç—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!', reply_markup=markup)
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == "Info":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ù–∞—á–∞—Ç—åüëç", callback_data = "Go"))
        bot.send_message(call.message.chat.id, "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ—Å–º–µ—è—Ç—å—Å—è –∏ —É–ª—ã–±–Ω—É—Ç—å—Å—è, –∑–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏ —Å–º–µ—à–Ω—ã—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ ", reply_markup=markup)
        bot.edit_message_reply_markup(chat_id=call.message.chat.id,  message_id=call.message.message_id,  reply_markup=markup)
    elif call.data == "Go":
        markup = types.ReplyKeyboardMarkup()
        btn1 = "–ü—Ä–æ—Å—Ç–æ–π –∞–Ω–µ–∫–¥–æ—Ç"
        btn2 = "–° —á–µ—Ä–Ω—ã–º —é–º–æ—Ä–æ–º"
        btn3 = "–î–µ—Ç—Å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç"
        markup.add(btn1,btn2,btn3)
        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π –∞–Ω–µ–∫–¥–æ—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ")
@bot.message_handler(func= lambda m : m.text)







if __name__ == '__main__':
    bot.infinity_polling()


